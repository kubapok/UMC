{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "zajecia_eskploracja_danych",
      "provenance": [],
      "collapsed_sections": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "metadata": {
        "id": "vAK1yY39Ja6K",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "project_id = 'mojprojekt3'"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "o7eAhM8UKSA7",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "from google.colab import auth\n",
        "auth.authenticate_user()"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "T63iu2e3KVDG",
        "colab_type": "code",
        "outputId": "956baacf-96ae-49a8-eca2-22cedacdf718",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        }
      },
      "source": [
        "!gcloud config set project {project_id}"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Updated property [core/project].\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "aZ1b0POCKdKu",
        "colab_type": "code",
        "outputId": "db6a65fd-1b39-4ccd-a50a-e23f42f5b270",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 566
        }
      },
      "source": [
        "!gsutil cp -r gs://mojprojekt3-vcm/dataset/ ."
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Copying gs://mojprojekt3-vcm/dataset/1.jpg...\n",
            "Copying gs://mojprojekt3-vcm/dataset/10.jpg...\n",
            "Copying gs://mojprojekt3-vcm/dataset/11.jpg...\n",
            "Copying gs://mojprojekt3-vcm/dataset/12.jpg...\n",
            "- [4 files][475.5 KiB/475.5 KiB]                                                \n",
            "==> NOTE: You are performing a sequence of gsutil operations that may\n",
            "run significantly faster if you instead use gsutil -m cp ... Please\n",
            "see the -m section under \"gsutil help options\" for further information\n",
            "about when gsutil -m can be advantageous.\n",
            "\n",
            "Copying gs://mojprojekt3-vcm/dataset/13.jpg...\n",
            "Copying gs://mojprojekt3-vcm/dataset/14.jpg...\n",
            "Copying gs://mojprojekt3-vcm/dataset/15.jpg...\n",
            "Copying gs://mojprojekt3-vcm/dataset/16.jpg...\n",
            "Copying gs://mojprojekt3-vcm/dataset/17.jpg...\n",
            "Copying gs://mojprojekt3-vcm/dataset/18.jpg...\n",
            "Copying gs://mojprojekt3-vcm/dataset/19.jpg...\n",
            "Copying gs://mojprojekt3-vcm/dataset/2.jpg...\n",
            "Copying gs://mojprojekt3-vcm/dataset/20.jpeg...\n",
            "Copying gs://mojprojekt3-vcm/dataset/21.jpg...\n",
            "Copying gs://mojprojekt3-vcm/dataset/22.jpg...\n",
            "Copying gs://mojprojekt3-vcm/dataset/3.jpg...\n",
            "Copying gs://mojprojekt3-vcm/dataset/4.jpg...\n",
            "Copying gs://mojprojekt3-vcm/dataset/5.jpg...\n",
            "Copying gs://mojprojekt3-vcm/dataset/6.jpg...\n",
            "Copying gs://mojprojekt3-vcm/dataset/7.jpg...\n",
            "Copying gs://mojprojekt3-vcm/dataset/8.jpg...\n",
            "Copying gs://mojprojekt3-vcm/dataset/9.jpg...\n",
            "Copying gs://mojprojekt3-vcm/dataset/dataset.csv...\n",
            "| [23 files][  4.1 MiB/  4.1 MiB]                                               \n",
            "Operation completed over 23 objects/4.1 MiB.                                     \n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NKNeZpt7K3V0",
        "colab_type": "code",
        "outputId": "2f82ff62-5702-4259-e663-adbc951ba378",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 70
        }
      },
      "source": [
        "!ls dataset"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "10.jpg\t13.jpg\t16.jpg\t19.jpg\t 21.jpg  3.jpg\t6.jpg  9.jpg\n",
            "11.jpg\t14.jpg\t17.jpg\t1.jpg\t 22.jpg  4.jpg\t7.jpg  dataset.csv\n",
            "12.jpg\t15.jpg\t18.jpg\t20.jpeg  2.jpg\t 5.jpg\t8.jpg\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RwYmb0nILIfM",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import pandas as pd"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1EwRAQm7Ley6",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "r = pd.read_csv('dataset/dataset.csv',  names=['dataset_type','path','class'])"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "WwpOKiKMLily",
        "colab_type": "code",
        "outputId": "642f93cd-3ebc-4502-a1fe-0f0267c7817c",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 727
        }
      },
      "source": [
        "r"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>dataset_type</th>\n",
              "      <th>path</th>\n",
              "      <th>class</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>TRAIN</td>\n",
              "      <td>gs://mojprojekt3-vcm/dataset/1.jpg</td>\n",
              "      <td>samolot</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>TRAIN</td>\n",
              "      <td>gs://mojprojekt3-vcm/dataset/2.jpg</td>\n",
              "      <td>samolot</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>TRAIN</td>\n",
              "      <td>gs://mojprojekt3-vcm/dataset/3.jpg</td>\n",
              "      <td>samolot</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>TRAIN</td>\n",
              "      <td>gs://mojprojekt3-vcm/dataset/4.jpg</td>\n",
              "      <td>dom</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>TRAIN</td>\n",
              "      <td>gs://mojprojekt3-vcm/dataset/5.jpg</td>\n",
              "      <td>dom</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>TRAIN</td>\n",
              "      <td>gs://mojprojekt3-vcm/dataset/6.jpg</td>\n",
              "      <td>dom</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>TRAIN</td>\n",
              "      <td>gs://mojprojekt3-vcm/dataset/7.jpg</td>\n",
              "      <td>dom</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>TEST</td>\n",
              "      <td>gs://mojprojekt3-vcm/dataset/8.jpg</td>\n",
              "      <td>dom</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>TEST</td>\n",
              "      <td>gs://mojprojekt3-vcm/dataset/9.jpg</td>\n",
              "      <td>samolot</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>TRAIN</td>\n",
              "      <td>gs://mojprojekt3-vcm/dataset/10.jpg</td>\n",
              "      <td>samolot</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>TRAIN</td>\n",
              "      <td>gs://mojprojekt3-vcm/dataset/11.jpg</td>\n",
              "      <td>dom</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>TRAIN</td>\n",
              "      <td>gs://mojprojekt3-vcm/dataset/12.jpg</td>\n",
              "      <td>dom</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>TRAIN</td>\n",
              "      <td>gs://mojprojekt3-vcm/dataset/13.jpg</td>\n",
              "      <td>dom</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>VALIDATION</td>\n",
              "      <td>gs://mojprojekt3-vcm/dataset/14.jpg</td>\n",
              "      <td>dom</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>VALIDATION</td>\n",
              "      <td>gs://mojprojekt3-vcm/dataset/15.jpg</td>\n",
              "      <td>samolot</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>TRAIN</td>\n",
              "      <td>gs://mojprojekt3-vcm/dataset/16.jpg</td>\n",
              "      <td>samolot</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>TRAIN</td>\n",
              "      <td>gs://mojprojekt3-vcm/dataset/17.jpg</td>\n",
              "      <td>samolot</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>TRAIN</td>\n",
              "      <td>gs://mojprojekt3-vcm/dataset/18.jpg</td>\n",
              "      <td>samolot</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>TRAIN</td>\n",
              "      <td>gs://mojprojekt3-vcm/dataset/19.jpg</td>\n",
              "      <td>samolot</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>TRAIN</td>\n",
              "      <td>gs://mojprojekt3-vcm/dataset/20.jpg</td>\n",
              "      <td>samolot</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>TRAIN</td>\n",
              "      <td>gs://mojprojekt3-vcm/dataset/21.jpg</td>\n",
              "      <td>samolot</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>TRAIN</td>\n",
              "      <td>gs://mojprojekt3-vcm/dataset/22.jpg</td>\n",
              "      <td>dom</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   dataset_type                                 path    class\n",
              "0         TRAIN   gs://mojprojekt3-vcm/dataset/1.jpg  samolot\n",
              "1         TRAIN   gs://mojprojekt3-vcm/dataset/2.jpg  samolot\n",
              "2         TRAIN   gs://mojprojekt3-vcm/dataset/3.jpg  samolot\n",
              "3         TRAIN   gs://mojprojekt3-vcm/dataset/4.jpg      dom\n",
              "4         TRAIN   gs://mojprojekt3-vcm/dataset/5.jpg      dom\n",
              "5         TRAIN   gs://mojprojekt3-vcm/dataset/6.jpg      dom\n",
              "6         TRAIN   gs://mojprojekt3-vcm/dataset/7.jpg      dom\n",
              "7          TEST   gs://mojprojekt3-vcm/dataset/8.jpg      dom\n",
              "8          TEST   gs://mojprojekt3-vcm/dataset/9.jpg  samolot\n",
              "9         TRAIN  gs://mojprojekt3-vcm/dataset/10.jpg  samolot\n",
              "10        TRAIN  gs://mojprojekt3-vcm/dataset/11.jpg      dom\n",
              "11        TRAIN  gs://mojprojekt3-vcm/dataset/12.jpg      dom\n",
              "12        TRAIN  gs://mojprojekt3-vcm/dataset/13.jpg      dom\n",
              "13   VALIDATION  gs://mojprojekt3-vcm/dataset/14.jpg      dom\n",
              "14   VALIDATION  gs://mojprojekt3-vcm/dataset/15.jpg  samolot\n",
              "15        TRAIN  gs://mojprojekt3-vcm/dataset/16.jpg  samolot\n",
              "16        TRAIN  gs://mojprojekt3-vcm/dataset/17.jpg  samolot\n",
              "17        TRAIN  gs://mojprojekt3-vcm/dataset/18.jpg  samolot\n",
              "18        TRAIN  gs://mojprojekt3-vcm/dataset/19.jpg  samolot\n",
              "19        TRAIN  gs://mojprojekt3-vcm/dataset/20.jpg  samolot\n",
              "20        TRAIN  gs://mojprojekt3-vcm/dataset/21.jpg  samolot\n",
              "21        TRAIN  gs://mojprojekt3-vcm/dataset/22.jpg      dom"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0JQp4ueELlEa",
        "colab_type": "code",
        "outputId": "972aaf6b-4aec-4958-89cc-511be96b0f2d",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        }
      },
      "source": [
        "from keras.preprocessing.image import ImageDataGenerator, array_to_img, img_to_array, load_img\n",
        "\n",
        "datagen = ImageDataGenerator(\n",
        "        rotation_range=40,\n",
        "        width_shift_range=0.2,\n",
        "        height_shift_range=0.2,\n",
        "        rescale=1./255,\n",
        "        shear_range=0.2,\n",
        "        zoom_range=0.2,\n",
        "        horizontal_flip=True,\n",
        "        fill_mode='nearest')"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Using TensorFlow backend.\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rOniF0QyN_Zn",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "img = load_img('dataset/1.jpg')  # this is a PIL image\n",
        "x = img_to_array(img)  # this is a Numpy array with shape (3, 150, 150)\n",
        "x = x.reshape((1,) + x.shape)  # this is a Numpy array with shape (1, 3, 150, 150)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jitROZ20Xyl9",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "r['new_path'] = r.path.apply(lambda x: 'dataset/' + x.split('/')[-1] )"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "73HfWIbgODLZ",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "train_datagen = ImageDataGenerator(\n",
        "        shear_range=0.2,\n",
        "        zoom_range=0.2,\n",
        "        horizontal_flip=True)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "W1FJg8tRYXn2",
        "colab_type": "code",
        "outputId": "91ade136-4083-4bfa-e5b9-5667411e9c5d",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 90
        }
      },
      "source": [
        "train_datagen  = train_datagen.flow_from_dataframe(dataframe=r[r['dataset_type'] == 'TRAIN'], x_col='new_path', y_col='class')"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Found 17 validated image filenames belonging to 2 classes.\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/keras_preprocessing/image/dataframe_iterator.py:273: UserWarning: Found 1 invalid image filename(s) in x_col=\"new_path\". These filename(s) will be ignored.\n",
            "  .format(n_invalid, x_col)\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "M51nJo_zcgr5",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "valid_datagen = ImageDataGenerator()"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fwwE9vS4chAA",
        "colab_type": "code",
        "outputId": "0f1735bb-c2fd-496a-a371-5bd34fa0bda1",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        }
      },
      "source": [
        "valid_datagen  = valid_datagen.flow_from_dataframe(dataframe=r[r['dataset_type'] == 'VALIDATION'], x_col='new_path', y_col='class')"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Found 2 validated image filenames belonging to 2 classes.\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DqRjMiuHfnxH",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "test_datagen = ImageDataGenerator()"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lqIW8ycTfqFf",
        "colab_type": "code",
        "outputId": "16cb5751-51f1-49d9-c9f7-443906bb13d5",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        }
      },
      "source": [
        "test_datagen  = test_datagen.flow_from_dataframe(dataframe=r[r['dataset_type'] == 'TEST'], x_col='new_path', y_col='class')"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Found 2 validated image filenames belonging to 2 classes.\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "V76DJ8t9eDLH",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "from __future__ import print_function\n",
        "import keras\n",
        "from keras.datasets import mnist\n",
        "from keras.models import Sequential\n",
        "from keras.layers import Dense, Dropout, Flatten\n",
        "from keras.layers import Conv2D, MaxPooling2D\n",
        "from keras import backend as K"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "AKS5qA_PXcpP",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "\n",
        "model = Sequential()\n",
        "model.add(Conv2D(32, kernel_size=(3, 3),\n",
        "                 activation='relu',\n",
        "                 input_shape=(256,256,3)))\n",
        "model.add(Conv2D(64, (3, 3), activation='relu'))\n",
        "model.add(MaxPooling2D(pool_size=(2, 2)))\n",
        "model.add(Dropout(0.25))\n",
        "model.add(Flatten())\n",
        "model.add(Dense(128, activation='relu'))\n",
        "model.add(Dropout(0.5))\n",
        "model.add(Dense(2, activation='softmax'))"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pV1_BCMraso4",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "\n",
        "model.compile(loss='binary_crossentropy',\n",
        "              optimizer='adam',\n",
        "              metrics=['accuracy'])"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9lkCtzQnY7II",
        "colab_type": "code",
        "outputId": "d7248363-1382-418a-9880-ee95caa1d60c",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 212
        }
      },
      "source": [
        "model.fit_generator(\n",
        "        train_datagen,\n",
        "        validation_data=valid_datagen,\n",
        "        steps_per_epoch=20,\n",
        "        epochs=5)\n",
        "        "
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/5\n",
            "20/20 [==============================] - 17s 864ms/step - loss: 8.0969 - accuracy: 0.4735 - val_loss: 7.6685 - val_accuracy: 0.5000\n",
            "Epoch 2/5\n",
            "20/20 [==============================] - 15s 761ms/step - loss: 8.0966 - accuracy: 0.4735 - val_loss: 7.6685 - val_accuracy: 0.5000\n",
            "Epoch 3/5\n",
            "20/20 [==============================] - 15s 758ms/step - loss: 8.1419 - accuracy: 0.4706 - val_loss: 7.6685 - val_accuracy: 0.5000\n",
            "Epoch 4/5\n",
            "20/20 [==============================] - 15s 759ms/step - loss: 8.0966 - accuracy: 0.4735 - val_loss: 7.6685 - val_accuracy: 0.5000\n",
            "Epoch 5/5\n",
            "20/20 [==============================] - 15s 760ms/step - loss: 8.0966 - accuracy: 0.4735 - val_loss: 7.6685 - val_accuracy: 0.5000\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.callbacks.callbacks.History at 0x7fdac0182860>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "aSWgEA87apBa",
        "colab_type": "code",
        "outputId": "98705586-6ea1-43dd-c7c9-6b6160e528c4",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 52
        }
      },
      "source": [
        "model.evaluate(test_datagen)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "\r1/1 [==============================] - 0s 60ms/step\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[7.668546676635742, 0.5]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "calzKQ4-hqNs",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# https://console.cloud.google.com/flows/enableapi?apiid=bigquery"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZzTnGRrZgVmx",
        "colab_type": "code",
        "outputId": "2bb6af34-f9b1-45a1-e100-f8aa18161601",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 79
        }
      },
      "source": [
        "# Display query output immediately\n",
        "\n",
        "%%bigquery --project mojprojekt3\n",
        "SELECT \n",
        "  COUNT(*) as total_rows\n",
        "FROM `bigquery-public-data.samples.gsod`"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>total_rows</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>114420316</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   total_rows\n",
              "0   114420316"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "v4ULezjehfrH",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    }
  ]
}